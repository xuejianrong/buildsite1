window.Ui = {
    /**
     * 构建资源url
     * @param src
     * @returns {string}
     */
    buildImageUrl: function (src){
		if(src && src.indexOf('data:image') >= 0){
			return src;
		}
        return /^http/.test(src) ? src : App.url.resource + src;
    },
    /**
     * 构建img标签
     * @param  {string} src     图像实际地址
     * @param  {string} tempUrl     示例图像地址
     * @return {string}          图片html
     */
    buildImage: function (src, tempUrl) {
        if(!tempUrl){
            tempUrl = App.url.resource + '/plug-in/ui/img/image-loading.png';
        }
		if(src.indexOf('data:image') >= 0){
			tempUrl = src;
		}
        var $img = $('<img>');
        $img.attr({
            src: tempUrl,
            real: src,
            onload: "Ui.loadImage.call(this);"
        });

        return $img;
    },
	
	buildPic: function (src, size, tempUrl) {
        if(!tempUrl){
            tempUrl = App.url.resource + 'plug-in/ui/img/image-loading.png';
        }

        var $img = $('<img>');
        $img.attr({
            src: tempUrl,
            real: this.buildImageUrl(src),
            onload: "Ui.loadImage.call(this);"
        });
		if(size){
			$img.width(size);
			$img.height(size);
		}

        return $img[0].outerHTML;
    },

    /**
     * 构建头像
     * @param {object} aUser
     * @returns {String}
     */
    buildProfile: function (aUser) {
        var $profile = $('<a></a>'),
            url = this.buildImageUrl(aUser['avatar'] || aUser['profile_url'] || aUser['profile_path'] || aUser['profile']),
            $img = this.buildImage(url, App.url.resource + '/plug-in/ui/img/profile-default.png');

        $img.attr('title', aUser['name'] || aUser['uname']);
        $profile.addClass('ui-profile');
        $profile.append($img);

        return $profile;
    },

    /**
     * 构建头像
     * @param {object} aUser
     * @returns {String}
     */
    buildAvatar: function (aUser, size) {
        var $profile = $('<a></a>'),
            url = this.buildImageUrl(aUser['avatar'] || aUser['profile_url'] || aUser['profile_path'] || aUser['profile']),
            $img = this.buildImage(url, App.url.resource + 'plug-in/ui/img/profile-default.png');

        $img.attr('title', aUser['name'] || aUser['uname']);
        $profile.addClass('ui-profile');
        $profile.append($img);
		
		if(size){
			$img.width(size);
			$img.height(size);
			$profile.width(size);
			$profile.height(size);
		}
		
        return $profile[0].outerHTML;
    },

    buildNullImage: function(){
        var $img = $('<img>');
        $img.attr('src', App.url.resource + '/plug-in/ui/img/image-null.png');
        return $img;
    },

    /**
     * 构建用户名称
     * @param {object} aUser
     * @returns {String}
     */
    buildName: function (aUser) {
        var $name = $('<a></a>');
        $name.text(aUser['nickname'] || aUser['name'] || aUser['uname']);
        $name.addClass('ui-name');
        return $name;
    },

    /**
     *
     * @param name
     * @param label
     * @param aDateList 日期数组
     * @returns {*|jQuery|HTMLElement}
     */
    buildDateInput: function(name, label, aDateList) {
        var $dateInput = $('<input type="text" class="ue-date-input" pattern="[1|2]\\d{3}" title="请输入正确' + label + '年份" placeholder="请输入' + label + '年份" required>'
             + '<input type="text" class="ue-date-input" pattern="[01]?\\d" title="请输入正确' + label + '月份" placeholder="请输入' + label + '月份" required>'
             + '<input type="text" class="ue-date-input" pattern="[0123]?\\d" title="请输入正确' + label + '日期" placeholder="请输入' + label + '日期" required>'
             + '<input type="hidden" name="' + name+ '">'),
            $hide = $dateInput.eq(3);

        aDateList = aDateList || [];

        if(aDateList.length == 1){
            $dateInput.splice(1, 2);
        }else if(aDateList.length  == 2){
            $dateInput.splice(2, 1);
        }

        var $input = $dateInput.filter('[type="text"]');

        // 初始化时间
        for(var index = 0; index<aDateList.length; ++ index){
            $input.eq(index).val(aDateList[index]);
        }
        $hide.val(aDateList.join('-'));

        // 绑定变化事件
        $input.bind('blur', function(){
            var dateStr, aList = [], aDate;
            $input.each(function(){
                var self = this;
                aList.push(self.value);
            });

            dateStr = aList.join('-');
            aDate = new Date(dateStr);
            if(aDate && aDate.getMonth() != aList[1]){
                this.setCustomValidity('');
                $hide.val(dateStr).trigger("change");
            }else{
                this.setCustomValidity(label + '日期错误');
            }
        });

        return $dateInput;
    },

    // /**
    //  * 获取年级中文名字
    //  * @param grade
    //  * @returns {string|string}
    //  */
    // getGradeName: function(grade){
    //     if(UeData['aGradeList']){
    //         if(grade){
    //             return UeData['aGradeList'][grade];
    //         }else{
    //             return UeData['aGradeList'];
    //         }
    //     }
    // },

    /**
     * 加载img，如果加载成功则把示例替换成实际图片（real替换src）
     */
    loadImage : function (){
        var $this = $(this);
        var real = $this.attr('real');
        //图片地址异常的情况不请求
        if(!real || !/\.\w+$/.test(real)){
            return;
        }

        var image = new Image();
        image.src = real;
        image.onload = function(){
            $this.attr('src', real).removeAttr('onload').removeAttr('real');
        };
    }
};
$(function(){  
	//判断浏览器是否支持placeholder属性
	supportPlaceholder = 'placeholder' in document.createElement('input'),
	placeholder = function(input){
		var text = input.attr('placeholder'),
		defaultValue = input.defaultValue;
		if(text == undefined){
			return;
		}
		if(typeof(input.attr('data-type')) == 'undefined'){
			input.attr('data-type', input.attr('type'));
			input.attr('type', 'text');
		}
		if(!defaultValue){
			if(typeof(input.attr('phcolor')) == 'undefined'){
				input.val(text).addClass('phcolor');
			}else{
				input.val(text).addClass(input.attr('phcolor'));
			}
		}
		input.focus(function(){
			if(input.val() == text){
				$(this).val('');
			}
		});
		input.blur(function(){
			if(input.val() == ''){
				if(typeof(input.attr('phcolor')) == 'undefined'){
					$(this).val(text).addClass('phcolor');
				}else{
					$(this).val(text).addClass($(this).attr('phcolor'));
				}
				if(input.val() == text && $(this).attr('data-type') == 'password'){
					$(this).val(text).attr('type', 'text');
				}
			}
		});
		
		//输入的字符不为灰色
		input.keyup(function(){
			if(typeof(input.attr('phcolor')) == 'undefined'){
				$(this).removeClass('phcolor');
			}else{
				$(this).removeClass($(this).attr('phcolor'));
			}
			if($(this).val() == ''){
				$(this).attr('type', 'text');
			}else{
				$(this).attr('type', $(this).attr('data-type'));
			}
		});
	};
	//当浏览器不支持placeholder属性时，调用placeholder函数
	if(!supportPlaceholder){
		$('input').each(function(){
			text = $(this).attr('placeholder');
			if($(this).attr('type') == 'text' || $(this).attr('type') == 'password'){
				placeholder($(this));
			}
		});
	}
});

function commonUploadImage(o){
	$(o).next().trigger('click');
}